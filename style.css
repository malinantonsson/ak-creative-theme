@charset "UTF-8";
/*
Theme Name: Vantage-child
Theme URI: http: //mysite.com/
Description: This is a custom child theme I have created.
Author: Malin Antonsson
Author URI: http: //malinantonsson.com
Template: vantage
Version: 0.1
*/
body.responsive.layout-full #page-wrapper .full-container {
  max-width: 940px; }

#main {
  padding: 0 10px; }

p:empty {
  display: none; }

.textwidget ul {
  list-style-type: disc;
  margin-left: 0; }

.site-footer #theme-attribution {
  display: none; }

.site-footer #footer-widgets .widget {
  margin-bottom: 1em; }
  .site-footer #footer-widgets .widget .widget-title {
    text-align: center;
    margin-bottom: 0.3em; }
  @media screen and (max-width: 640px) {
    .site-footer #footer-widgets .widget {
      padding-bottom: 0 !important; } }

.entry-content h2 {
  margin-top: 0; }

.ak-nav {
  /* padding-top: 10px;
    padding-bottom: 10px; */ }
  @media (min-width: 958px) {
    .ak-nav {
      width: 70%;
      float: right;
      overflow: auto; } }

/* @media (min-width: $min-desktop) { */
.main-navigation {
  border-bottom: 1px dotted lightgray;
  padding-top: 1rem; }

/* } */
@media (min-width: 958px) {
  .ak-nav__wrapper {
    counter-reset: nav-item-counter;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    list-style: none;
    padding-left: 0;
    margin-top: 2rem !important; }
    .ak-nav__wrapper li {
      display: inline-block;
      -webkit-box-flex: 1;
      -webkit-flex: 1 1 auto;
          -ms-flex: 1 1 auto;
              flex: 1 1 auto;
      overflow-x: hidden;
      position: relative;
      text-align: center; }
      .ak-nav__wrapper li a {
        padding: 1em 0 !important; }
      .ak-nav__wrapper li a::before {
        content: counter(nav-item-counter, decimal-leading-zero) ".";
        counter-increment: nav-item-counter;
        display: block;
        font-size: 0.8em; }
      .ak-nav__wrapper li a::after {
        -webkit-transform: translateX(-101%);
            -ms-transform: translateX(-101%);
                transform: translateX(-101%);
        -webkit-transition: -webkit-transform 500ms ease-in;
        transition: -webkit-transform 500ms ease-in;
        transition: transform 500ms ease-in;
        transition: transform 500ms ease-in, -webkit-transform 500ms ease-in;
        bottom: 0;
        content: '';
        height: 1px;
        left: 0;
        position: absolute;
        width: 100%; }
      .ak-nav__wrapper li a:hover::after {
        -webkit-transform: translateX(0%);
            -ms-transform: translateX(0%);
                transform: translateX(0%); } }

.mobile-nav-frame .mobile {
  counter-reset: nav-item-counter; }
  .mobile-nav-frame .mobile li {
    display: block;
    overflow-x: hidden;
    padding: 1em 1em;
    position: relative;
    text-align: center;
    font-size: 1rem !important; }
    @media (orientation: landscape) {
      .mobile-nav-frame .mobile li {
        display: inline-block; } }
    .mobile-nav-frame .mobile li a::before {
      content: counter(nav-item-counter, decimal-leading-zero) ".";
      counter-increment: nav-item-counter;
      display: block;
      font-size: 0.8em; }
    .mobile-nav-frame .mobile li a::after {
      bottom: 0;
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      width: 100%;
      -webkit-transform: translateX(-101%);
          -ms-transform: translateX(-101%);
              transform: translateX(-101%);
      -webkit-transition: -webkit-transform 500ms ease-in;
      transition: -webkit-transform 500ms ease-in;
      transition: transform 500ms ease-in;
      transition: transform 500ms ease-in, -webkit-transform 500ms ease-in; }
    .mobile-nav-frame .mobile li a:hover::after,
    .mobile-nav-frame .mobile li a:focus::after {
      -webkit-transform: translateX(0%);
          -ms-transform: translateX(0%);
              transform: translateX(0%); }

.mobile-nav-frame {
  width: 100% !important;
  height: 0% !important;
  min-height: 0%;
  right: 0 !important;
  -webkit-transition: min-height 300ms ease-in;
  transition: min-height 300ms ease-in;
  display: block !important; }
  .mobile-nav-frame .title {
    border: none !important; }
  .mobile-nav-frame h3 {
    display: none; }
  .mobile-nav-frame ul {
    border: none !important;
    box-shadow: none !important;
    border-radius: 0; }
    .mobile-nav-frame ul li {
      border: none !important; }
      .mobile-nav-frame ul li a.link {
        text-shadow: none !important;
        margin-right: 0px !important; }
        @media (min-width: 567px) {
          .mobile-nav-frame ul li a.link {
            font-size: 1.4rem !important; } }
  .mobile-nav-frame.ak_mobile_nav--open {
    min-height: 100% !important;
    -webkit-transition: min-height 300ms ease-in;
    transition: min-height 300ms ease-in; }
  .mobile-nav-frame .slides-container {
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 100%; }
  .mobile-nav-frame .slide {
    text-align: center; }
  .mobile-nav-frame .mobile {
    margin-left: 0;
    margin-right: 0;
    display: inline-block;
    position: relative; }
    @media (max-width: 958px) and (orientation: portrait) {
      .mobile-nav-frame .mobile::before {
        bottom: 100%;
        content: '';
        height: 1px;
        left: 0;
        position: absolute;
        width: 100%;
        height: 17px;
        background: url("./png/bracket-top.png") top center/contain no-repeat; }
      .mobile-nav-frame .mobile::after {
        bottom: -17px;
        content: '';
        height: 1px;
        left: 0;
        position: absolute;
        width: 100%;
        background-color: black;
        height: 17px;
        background: url("./png/bracket-bottom.png") top center/contain no-repeat; } }

.ak-nav__wrapper .current_page_item a::after {
  bottom: 0;
  content: '';
  height: 1px;
  left: 0;
  position: absolute;
  width: 100%;
  -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
          transform: translateX(0); }

@media (max-width: 958px) {
  .mobile-navigation .full-container {
    overflow: auto;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
        -ms-flex-align: end;
            align-items: flex-end;
    padding-top: 10px; } }

.mobilenav-main-link img {
  max-width: 40px;
  max-height: 25px; }

.mobile-nav-icon {
  display: none; }

@media (max-width: 1080px) {
  body.responsive #masthead.masthead-logo-in-menu .logo {
    display: none; } }

.custom-logo-link {
  display: inline-block;
  float: left; }
  @media (max-width: 1080px) {
    .custom-logo-link {
      margin-left: 10px;
      max-width: 20%; }
      .custom-logo-link .custom-logo {
        max-width: 100% !important;
        height: auto !important; } }

.entry-content blockquote {
  margin: 0;
  border-left: none;
  padding: 0;
  font-size: 3em;
  line-height: 1.2em;
  font-style: initial;
  font-family: "Crimson Text"; }
  @media (min-width: 958px) {
    .entry-content blockquote {
      padding: 1em; } }

.entry-title {
  margin-top: 1em; }

.five-point-promise img {
  margin: auto;
  display: block; }
  @media (min-width: 767px) {
    .five-point-promise img {
      float: right; } }

@media (max-width: 767px) {
  .five-point-promise--first .panel-grid-cell:first-child .textwidget {
    padding-top: 2em;
    border-top: 2px dotted #000000; } }

@media (min-width: 767px) {
  .five-point-promise--first .panel-grid-cell:first-child {
    padding-top: 2em; }
  .five-point-promise--first .panel-grid-cell:last-child .textwidget {
    border-top: 2px dotted #000000;
    padding-top: 2em; } }

/* .panel-row-style {
    padding: 0;
} */
.page-divider-vertical {
  position: relative; }
  .page-divider-vertical::before {
    height: 100%;
    width: 1px;
    content: '';
    display: block;
    position: absolute;
    left: -20px;
    border-left: 2px dashed; }

.ak-pledges {
  border-top: 2px dotted lightgray;
  padding: 1em 0; }

.ak-standout {
  border-top: 2px dotted;
  border-bottom: 2px dotted;
  padding-top: 1em;
  padding-bottom: 1em; }

.scroll-to-section br {
  display: none; }

.scroll-to-section__button {
  font-family: "Crimson Text"; }

.scroll-to-section__icon {
  height: 20px;
  width: 30px;
  display: block;
  margin: auto;
  background: url("./svg/scroll-down.svg") top center no-repeat; }

.scroll-to-section__bracket {
  color: #000; }

#scroll-to-top {
  display: block;
  position: static;
  width: 7em;
  text-align: center;
  margin: auto;
  -webkit-transform: scale(1, 1);
      -ms-transform: scale(1, 1);
          transform: scale(1, 1); }
  #scroll-to-top.displayed {
    opacity: 1 !important; }
    #scroll-to-top.displayed:hover {
      opacity: 1 !important; }
  #scroll-to-top .vantage-icon-arrow-up {
    display: none; }
  #scroll-to-top .scroll-to-top__icon {
    height: 20px;
    width: 30px;
    display: block;
    margin: auto;
    background: url(./svg/scroll-top.svg) top center no-repeat; }

.two-col-with-image img {
  margin: auto;
  display: block; }
  @media (min-width: 767px) {
    .two-col-with-image img {
      float: right; } }

.ak-nav__wrapper li a::after {
  background: #ffc72a; }

#scroll-to-top {
  color: #000000; }

#scroll-to-top:hover {
  color: #000000; }

.scroll-to-top__copy {
  color: #ffc72a; }

/* .entry-title::before {
  content: 'â€” ';
} */
.page-number {
  font-size: 76px;
  margin-top: 36px;
  font-family: "Crimson Text";
  color: #ffc72a; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCJfYmFzZS5zY3NzIiwiZ2xvYmFscy9fY21zLXV0aWwuc2NzcyIsImdsb2JhbHMvX2Zvb3Rlci5zY3NzIiwiZ2xvYmFscy9faGVhZGxpbmUuc2NzcyIsImdsb2JhbHMvX25hdi5zY3NzIiwibWl4aW5zL2NvdW50ZXIuc2NzcyIsIm1peGlucy91bmRlcmxpbmUuc2NzcyIsImNvbXBvbmVudHMvX2VudHJ5LWNvbnRlbnQuc2NzcyIsImNvbXBvbmVudHMvX2VudHJ5LXRpdGxlLnNjc3MiLCJjb21wb25lbnRzL19maXZlLXBvaW50LXByb21pc2Uuc2NzcyIsImNvbXBvbmVudHMvX3BhbmVsLXJvdy1zdHlsZS5zY3NzIiwiY29tcG9uZW50cy9fcGFnZS1kaXZpZGVyLXZlcnRpY2FsLnNjc3MiLCJjb21wb25lbnRzL19wbGVkZ2VzLnNjc3MiLCJjb21wb25lbnRzL19zdGFuZG91dC5zY3NzIiwiY29tcG9uZW50cy9fc2Nyb2xsLXRvLXNlY3Rpb24uc2NzcyIsImNvbXBvbmVudHMvX3Njcm9sbC10by10b3Auc2NzcyIsImNvbXBvbmVudHMvX3R3by1jb2wtd2l0aC1pbWFnZS5zY3NzIiwiX2N1c3RvbS1jc3Muc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNBakI7Ozs7Ozs7O0VBUUU7QUNFRjtFQUNJLGlCQUFpQixFQUNwQjs7QUFHRDtFQUNJLGdCQUFnQixFQUNuQjs7QUNqQkQ7RUFDSSxjQUFjLEVBQ2pCOztBQUVEO0VBRUUsc0JBQXNCO0VBQ3RCLGVBQWUsRUFDZjs7QUNSRjtFQUlRLGNBQWMsRUFDakI7O0FBTEw7RUFTWSxtQkFBbUIsRUFVdEI7RUFuQlQ7SUFXZ0IsbUJBQW1CO0lBQ25CLHFCQUFxQixFQUN4QjtFQUdEO0lBaEJaO01BaUJnQiw2QkFBMkIsRUFFbEMsRUFBQTs7QUNuQlQ7RUFDSSxjQUFjLEVBQ2pCOztBQ0FEO0VBQ0k7NEJBQ3dCLEVBTTNCO0VBTEc7SUFISjtNQUlR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XG4vKlxuVGhlbWUgTmFtZTogVmFudGFnZS1jaGlsZFxuVGhlbWUgVVJJOiBodHRwOiAvL215c2l0ZS5jb20vXG5EZXNjcmlwdGlvbjogVGhpcyBpcyBhIGN1c3RvbSBjaGlsZCB0aGVtZSBJIGhhdmUgY3JlYXRlZC5cbkF1dGhvcjogTWFsaW4gQW50b25zc29uXG5BdXRob3IgVVJJOiBodHRwOiAvL21hbGluYW50b25zc29uLmNvbVxuVGVtcGxhdGU6IHZhbnRhZ2VcblZlcnNpb246IDAuMVxuKi9cbmJvZHkucmVzcG9uc2l2ZS5sYXlvdXQtZnVsbCAjcGFnZS13cmFwcGVyIC5mdWxsLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogOTQwcHg7IH1cblxuI21haW4ge1xuICBwYWRkaW5nOiAwIDEwcHg7IH1cblxucDplbXB0eSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLnRleHR3aWRnZXQgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4gIG1hcmdpbi1sZWZ0OiAwOyB9XG5cbi5zaXRlLWZvb3RlciAjdGhlbWUtYXR0cmlidXRpb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5zaXRlLWZvb3RlciAjZm9vdGVyLXdpZGdldHMgLndpZGdldCB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTsgfVxuICAuc2l0ZS1mb290ZXIgI2Zvb3Rlci13aWRnZXRzIC53aWRnZXQgLndpZGdldC10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDAuM2VtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gICAgLnNpdGUtZm9vdGVyICNmb290ZXItd2lkZ2V0cyAud2lkZ2V0IHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7IH0gfVxuXG4uZW50cnktY29udGVudCBoMiB7XG4gIG1hcmdpbi10b3A6IDA7IH1cblxuLmFrLW5hdiB7XG4gIC8qIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4OyAqLyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5NThweCkge1xuICAgIC5hay1uYXYge1xuICAgICAgd2lkdGg6IDcwJTtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG92ZXJmbG93OiBhdXRvOyB9IH1cblxuLyogQG1lZGlhIChtaW4td2lkdGg6ICRtaW4tZGVza3RvcCkgeyAqL1xuLm1haW4tbmF2aWdhdGlvbiB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgbGlnaHRncmF5O1xuICBwYWRkaW5nLXRvcDogMXJlbTsgfVxuXG4vKiB9ICovXG5AbWVkaWEgKG1pbi13aWR0aDogOTU4cHgpIHtcbiAgLmFrLW5hdl9fd3JhcHBlciB7XG4gICAgY291bnRlci1yZXNldDogbmF2LWl0ZW0tY291bnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBtYXJnaW4tdG9wOiAycmVtICFpbXBvcnRhbnQ7IH1cbiAgICAuYWstbmF2X193cmFwcGVyIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAuYWstbmF2X193cmFwcGVyIGxpIGEge1xuICAgICAgICBwYWRkaW5nOiAxZW0gMCAhaW1wb3J0YW50OyB9XG4gICAgICAuYWstbmF2X193cmFwcGVyIGxpIGE6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IGNvdW50ZXIobmF2LWl0ZW0tY291bnRlciwgZGVjaW1hbC1sZWFkaW5nLXplcm8pIFwiLlwiO1xuICAgICAgICBjb3VudGVyLWluY3JlbWVudDogbmF2LWl0ZW0tY291bnRlcjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMC44ZW07IH1cbiAgICAgIC5hay1uYXZfX3dyYXBwZXIgbGkgYTo6YWZ0ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMSUpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXMgZWFzZS1pbjtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5hay1uYXZfX3dyYXBwZXIgbGkgYTpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9IH1cblxuLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZSB7XG4gIGNvdW50ZXItcmVzZXQ6IG5hdi1pdGVtLWNvdW50ZXI7IH1cbiAgLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZSBsaSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDFlbSAxZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDsgfVxuICAgIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAgICAgLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZSBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfSB9XG4gICAgLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZSBsaSBhOjpiZWZvcmUge1xuICAgICAgY29udGVudDogY291bnRlcihuYXYtaXRlbS1jb3VudGVyLCBkZWNpbWFsLWxlYWRpbmctemVybykgXCIuXCI7XG4gICAgICBjb3VudGVyLWluY3JlbWVudDogbmF2LWl0ZW0tY291bnRlcjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAwLjhlbTsgfVxuICAgIC5tb2JpbGUtbmF2LWZyYW1lIC5tb2JpbGUgbGkgYTo6YWZ0ZXIge1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAxJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXMgZWFzZS1pbjsgfVxuICAgIC5tb2JpbGUtbmF2LWZyYW1lIC5tb2JpbGUgbGkgYTpob3Zlcjo6YWZ0ZXIsXG4gICAgLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZSBsaSBhOmZvY3VzOjphZnRlciB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG5cbi5tb2JpbGUtbmF2LWZyYW1lIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAwJSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiAwJTtcbiAgcmlnaHQ6IDAgIWltcG9ydGFudDtcbiAgdHJhbnNpdGlvbjogbWluLWhlaWdodCAzMDBtcyBlYXNlLWluO1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG4gIC5tb2JpbGUtbmF2LWZyYW1lIC50aXRsZSB7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgLm1vYmlsZS1uYXYtZnJhbWUgaDMge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLm1vYmlsZS1uYXYtZnJhbWUgdWwge1xuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAwOyB9XG4gICAgLm1vYmlsZS1uYXYtZnJhbWUgdWwgbGkge1xuICAgICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgICAgIC5tb2JpbGUtbmF2LWZyYW1lIHVsIGxpIGEubGluayB7XG4gICAgICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMHB4ICFpbXBvcnRhbnQ7IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDU2N3B4KSB7XG4gICAgICAgICAgLm1vYmlsZS1uYXYtZnJhbWUgdWwgbGkgYS5saW5rIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtICFpbXBvcnRhbnQ7IH0gfVxuICAubW9iaWxlLW5hdi1mcmFtZS5ha19tb2JpbGVfbmF2LS1vcGVuIHtcbiAgICBtaW4taGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgdHJhbnNpdGlvbjogbWluLWhlaWdodCAzMDBtcyBlYXNlLWluOyB9XG4gIC5tb2JpbGUtbmF2LWZyYW1lIC5zbGlkZXMtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5tb2JpbGUtbmF2LWZyYW1lIC5zbGlkZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5tb2JpbGUtbmF2LWZyYW1lIC5tb2JpbGUge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk1OHB4KSBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgLm1vYmlsZS1uYXYtZnJhbWUgLm1vYmlsZTo6YmVmb3JlIHtcbiAgICAgICAgYm90dG9tOiAxMDAlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTdweDtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi9wbmcvYnJhY2tldC10b3AucG5nXCIpIHRvcCBjZW50ZXIvY29udGFpbiBuby1yZXBlYXQ7IH1cbiAgICAgIC5tb2JpbGUtbmF2LWZyYW1lIC5tb2JpbGU6OmFmdGVyIHtcbiAgICAgICAgYm90dG9tOiAtMTdweDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICAgICAgaGVpZ2h0OiAxN3B4O1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3BuZy9icmFja2V0LWJvdHRvbS5wbmdcIikgdG9wIGNlbnRlci9jb250YWluIG5vLXJlcGVhdDsgfSB9XG5cbi5hay1uYXZfX3dyYXBwZXIgLmN1cnJlbnRfcGFnZV9pdGVtIGE6OmFmdGVyIHtcbiAgYm90dG9tOiAwO1xuICBjb250ZW50OiAnJztcbiAgaGVpZ2h0OiAxcHg7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTU4cHgpIHtcbiAgLm1vYmlsZS1uYXZpZ2F0aW9uIC5mdWxsLWNvbnRhaW5lciB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4OyB9IH1cblxuLm1vYmlsZW5hdi1tYWluLWxpbmsgaW1nIHtcbiAgbWF4LXdpZHRoOiA0MHB4O1xuICBtYXgtaGVpZ2h0OiAyNXB4OyB9XG5cbi5tb2JpbGUtbmF2LWljb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgYm9keS5yZXNwb25zaXZlICNtYXN0aGVhZC5tYXN0aGVhZC1sb2dvLWluLW1lbnUgLmxvZ28ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uY3VzdG9tLWxvZ28tbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IGxlZnQ7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwODBweCkge1xuICAgIC5jdXN0b20tbG9nby1saW5rIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgbWF4LXdpZHRoOiAyMCU7IH1cbiAgICAgIC5jdXN0b20tbG9nby1saW5rIC5jdXN0b20tbG9nbyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsgfSB9XG5cbi5lbnRyeS1jb250ZW50IGJsb2NrcXVvdGUge1xuICBtYXJnaW46IDA7XG4gIGJvcmRlci1sZWZ0OiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBmb250LXNpemU6IDNlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICBmb250LXN0eWxlOiBpbml0aWFsO1xuICBmb250LWZhbWlseTogXCJDcmltc29uIFRleHRcIjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTU4cHgpIHtcbiAgICAuZW50cnktY29udGVudCBibG9ja3F1b3RlIHtcbiAgICAgIHBhZGRpbmc6IDFlbTsgfSB9XG5cbi5lbnRyeS10aXRsZSB7XG4gIG1hcmdpbi10b3A6IDFlbTsgfVxuXG4uZml2ZS1wb2ludC1wcm9taXNlIGltZyB7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgLmZpdmUtcG9pbnQtcHJvbWlzZSBpbWcge1xuICAgICAgZmxvYXQ6IHJpZ2h0OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5maXZlLXBvaW50LXByb21pc2UtLWZpcnN0IC5wYW5lbC1ncmlkLWNlbGw6Zmlyc3QtY2hpbGQgLnRleHR3aWRnZXQge1xuICAgIHBhZGRpbmctdG9wOiAyZW07XG4gICAgYm9yZGVyLXRvcDogMnB4IGRvdHRlZCAjMDAwMDAwOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5maXZlLXBvaW50LXByb21pc2UtLWZpcnN0IC5wYW5lbC1ncmlkLWNlbGw6Zmlyc3QtY2hpbGQge1xuICAgIHBhZGRpbmctdG9wOiAyZW07IH1cbiAgLmZpdmUtcG9pbnQtcHJvbWlzZS0tZmlyc3QgLnBhbmVsLWdyaWQtY2VsbDpsYXN0LWNoaWxkIC50ZXh0d2lkZ2V0IHtcbiAgICBib3JkZXItdG9wOiAycHggZG90dGVkICMwMDAwMDA7XG4gICAgcGFkZGluZy10b3A6IDJlbTsgfSB9XG5cbi8qIC5wYW5lbC1yb3ctc3R5bGUge1xuICAgIHBhZGRpbmc6IDA7XG59ICovXG4ucGFnZS1kaXZpZGVyLXZlcnRpY2FsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5wYWdlLWRpdmlkZXItdmVydGljYWw6OmJlZm9yZSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxcHg7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0yMHB4O1xuICAgIGJvcmRlci1sZWZ0OiAycHggZGFzaGVkOyB9XG5cbi5hay1wbGVkZ2VzIHtcbiAgYm9yZGVyLXRvcDogMnB4IGRvdHRlZCBsaWdodGdyYXk7XG4gIHBhZGRpbmc6IDFlbSAwOyB9XG5cbi5hay1zdGFuZG91dCB7XG4gIGJvcmRlci10b3A6IDJweCBkb3R0ZWQ7XG4gIGJvcmRlci1ib3R0b206IDJweCBkb3R0ZWQ7XG4gIHBhZGRpbmctdG9wOiAxZW07XG4gIHBhZGRpbmctYm90dG9tOiAxZW07IH1cblxuLnNjcm9sbC10by1zZWN0aW9uIGJyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uc2Nyb2xsLXRvLXNlY3Rpb25fX2J1dHRvbiB7XG4gIGZvbnQtZmFtaWx5OiBcIkNyaW1zb24gVGV4dFwiOyB9XG5cbi5zY3JvbGwtdG8tc2VjdGlvbl9faWNvbiB7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDMwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IGF1dG87XG4gIGJhY2tncm91bmQ6IHVybChcIi4vc3ZnL3Njcm9sbC1kb3duLnN2Z1wiKSB0b3AgY2VudGVyIG5vLXJlcGVhdDsgfVxuXG4uc2Nyb2xsLXRvLXNlY3Rpb25fX2JyYWNrZXQge1xuICBjb2xvcjogIzAwMDsgfVxuXG4jc2Nyb2xsLXRvLXRvcCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB3aWR0aDogN2VtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogYXV0bztcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLCAxKTsgfVxuICAjc2Nyb2xsLXRvLXRvcC5kaXNwbGF5ZWQge1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgfVxuICAgICNzY3JvbGwtdG8tdG9wLmRpc3BsYXllZDpob3ZlciB7XG4gICAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7IH1cbiAgI3Njcm9sbC10by10b3AgLnZhbnRhZ2UtaWNvbi1hcnJvdy11cCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAjc2Nyb2xsLXRvLXRvcCAuc2Nyb2xsLXRvLXRvcF9faWNvbiB7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBiYWNrZ3JvdW5kOiB1cmwoLi9zdmcvc2Nyb2xsLXRvcC5zdmcpIHRvcCBjZW50ZXIgbm8tcmVwZWF0OyB9XG5cbi50d28tY29sLXdpdGgtaW1hZ2UgaW1nIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jazsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAudHdvLWNvbC13aXRoLWltYWdlIGltZyB7XG4gICAgICBmbG9hdDogcmlnaHQ7IH0gfVxuXG4uYWstbmF2X193cmFwcGVyIGxpIGE6OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2ZmYzcyYTsgfVxuXG4jc2Nyb2xsLXRvLXRvcCB7XG4gIGNvbG9yOiAjMDAwMDAwOyB9XG5cbiNzY3JvbGwtdG8tdG9wOmhvdmVyIHtcbiAgY29sb3I6ICMwMDAwMDA7IH1cblxuLnNjcm9sbC10by10b3BfX2NvcHkge1xuICBjb2xvcjogI2ZmYzcyYTsgfVxuXG4vKiAuZW50cnktdGl0bGU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICfigJQgJztcbn0gKi9cbi5wYWdlLW51bWJlciB7XG4gIGZvbnQtc2l6ZTogNzZweDtcbiAgbWFyZ2luLXRvcDogMzZweDtcbiAgZm9udC1mYW1pbHk6IFwiQ3JpbXNvbiBUZXh0XCI7XG4gIGNvbG9yOiAjZmZjNzJhOyB9XG4iLCIvKlxuVGhlbWUgTmFtZTogVmFudGFnZS1jaGlsZFxuVGhlbWUgVVJJOiBodHRwOiAvL215c2l0ZS5jb20vXG5EZXNjcmlwdGlvbjogVGhpcyBpcyBhIGN1c3RvbSBjaGlsZCB0aGVtZSBJIGhhdmUgY3JlYXRlZC5cbkF1dGhvcjogTWFsaW4gQW50b25zc29uXG5BdXRob3IgVVJJOiBodHRwOiAvL21hbGluYW50b25zc29uLmNvbVxuVGVtcGxhdGU6IHZhbnRhZ2VcblZlcnNpb246IDAuMVxuKi9cbkBpbXBvcnQgJ21peGlucy9jb3VudGVyJztcbkBpbXBvcnQgJ21peGlucy91bmRlcmxpbmUnO1xuXG4vL21vYmlsZSA8IDc2N3B4XG4vLyB0YWJsZXQgPCA5NTlweFxuQGltcG9ydCAnYmFzZSc7XG5cbkBpbXBvcnQgJ2dsb2JhbHMvY21zLXV0aWwnO1xuQGltcG9ydCAnZ2xvYmFscy9mb290ZXInO1xuQGltcG9ydCAnZ2xvYmFscy9oZWFkbGluZSc7XG5AaW1wb3J0ICdnbG9iYWxzL25hdic7XG5cbkBpbXBvcnQgJ2NvbXBvbmVudHMvZW50cnktY29udGVudCc7XG5AaW1wb3J0ICdjb21wb25lbnRzL2VudHJ5LXRpdGxlJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvZml2ZS1wb2ludC1wcm9taXNlJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcGFuZWwtcm93LXN0eWxlJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcGFnZS1kaXZpZGVyLXZlcnRpY2FsJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcGFnZS1pbnRybyc7XG5AaW1wb3J0ICdjb21wb25lbnRzL3BhZ2UtbnVtYmVyJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvcGxlZGdlcyc7XG5AaW1wb3J0ICdjb21wb25lbnRzL3N0YW5kb3V0JztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvc2Nyb2xsLXRvLXNlY3Rpb24nO1xuQGltcG9ydCAnY29tcG9uZW50cy9zY3JvbGwtdG8tdG9wJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvdHdvLWNvbC13aXRoLWltYWdlJztcblxuQGltcG9ydCAnY3VzdG9tLWNzcyc7IiwiJGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4kY29weS1jb2xvcjogIzAwMDAwMDtcbiRhY2NlbnQtY29sb3I6ICNmZmM3MmE7XG5cblxuJG1vYmlsZS1sYW5kc2NhcGU6IDU2N3B4O1xuJG1pbi10YWJsZXQ6IDc2N3B4O1xuJG1pbi1kZXNrdG9wOiA5NThweDtcblxuLy8gc2V0cyB0aGUgbWF4IHNpdGUgd2lkdGhcbmJvZHkucmVzcG9uc2l2ZS5sYXlvdXQtZnVsbCAjcGFnZS13cmFwcGVyIC5mdWxsLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA5NDBweDtcbn1cblxuLy9zZXQgYm9keSBjb250ZW50IG1hcmdpbiBcbiNtYWluIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG59XG4iLCJwOmVtcHR5IHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4udGV4dHdpZGdldCB7XG5cdHVsIHtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdH1cbn0iLCIuc2l0ZS1mb290ZXIge1xuXG4gICAgLy9oaWRlIFwiYSBzaXRlb3JpZ2luIHRoZW1lXCJcbiAgICAjdGhlbWUtYXR0cmlidXRpb24ge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICNmb290ZXItd2lkZ2V0cyB7XG4gICAgICAgIC53aWRnZXQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICAgICAgLndpZGdldC10aXRsZSB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuM2VtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL21vYmlsZSBvdmVycmlkZVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMCFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIuZW50cnktY29udGVudCBoMiB7XG4gICAgbWFyZ2luLXRvcDogMDtcbn0iLCIkaGVpZ2h0LXRyYW5zaXRpb246IG1pbi1oZWlnaHQgMzAwbXMgZWFzZS1pbjtcblxuLmFrLW5hdiB7XG4gICAgLyogcGFkZGluZy10b3A6IDEwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7ICovXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4tZGVza3RvcCkge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cbn1cblxuLyogQG1lZGlhIChtaW4td2lkdGg6ICRtaW4tZGVza3RvcCkgeyAqL1xuICAgIC5tYWluLW5hdmlnYXRpb24ge1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkIGxpZ2h0Z3JheTtcbiAgICAgICAgcGFkZGluZy10b3A6IDFyZW07XG4gICAgfVxuLyogfSAqL1xuLmFrLW5hdl9fd3JhcHBlciB7XG4gICAgLy90aGlzIGlzIHRoZSBtYWluIG5hdiBvbiBkZXNrdG9wXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4tZGVza3RvcCkge1xuICAgICAgICBAaW5jbHVkZSBjb3VudGVyLXJlc2V0KG5hdi1pdGVtLWNvdW50ZXIpO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbSFpbXBvcnRhbnQ7XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgZmxleDogMSAxIGF1dG87XG4gICAgICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAgIGEgey8vb3ZlcnJpZGVcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxZW0gMCFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vYWRkIHRoZSBudW1iZXIgYWJvdmVcbiAgICAgICAgICAgIGE6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgY291bnRlcihuYXYtaXRlbS1jb3VudGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAgIC8vYWRkIHRoZSBsaW5lIGJlbG93XG4gICAgICAgICAgICBhOjphZnRlciB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDElKTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNTAwbXMgZWFzZS1pbjtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAgIC8vYW5pbWF0ZSB0aGUgbGluZSBvbiBob3ZlclxuICAgICAgICAgICAgYTpob3ZlciB7XG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxufVxuXG4vL3RoaXMgaXMgdGhlIG1vYmlsZSBuYXZcbi5tb2JpbGUtbmF2LWZyYW1lIC5tb2JpbGUge1xuICAgIEBpbmNsdWRlIGNvdW50ZXItcmVzZXQobmF2LWl0ZW0tY291bnRlcik7XG5cbiAgICBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICAgIHBhZGRpbmc6IDFlbSAxZW07XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXNpemU6IDFyZW0haW1wb3J0YW50O1xuXG4gICAgICAgIEBtZWRpYSAob3JpZW50YXRpb246bGFuZHNjYXBlKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cblxuICAgICAgICAvL2FkZCB0aGUgbnVtYmVyIGFib3ZlXG4gICAgICAgIGE6OmJlZm9yZSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBjb3VudGVyKG5hdi1pdGVtLWNvdW50ZXIpO1xuICAgICAgICB9XG4gICAgICBcbiAgICAgICAgLy9hZGQgdGhlIGxpbmUgYmVsb3dcbiAgICAgICAgYTo6YWZ0ZXIge1xuICAgICAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lKCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMSUpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDUwMG1zIGVhc2UtaW47XG4gICAgICAgIH1cbiAgICAgIFxuICAgICAgICAvL2FuaW1hdGUgdGhlIGxpbmUgb24gaG92ZXJcbiAgICAgICAgYTpob3ZlcixcbiAgICAgICAgYTpmb2N1cyB7XG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuIC8vYWRkIHRoZSBuYXYgb3BlbiB0cmFuc2l0aW9uICYgb3ZlcnJpZGVzXG4ubW9iaWxlLW5hdi1mcmFtZSB7XG4gICAgLy9sb3RzIG9mIG92ZXJyaWRlc1xuICAgIC50aXRsZSB7XG4gICAgICAgIGJvcmRlcjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICBcbiAgICB1bCB7XG4gICAgICAgIGJvcmRlcjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmUhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZSFpbXBvcnRhbnQ7XG5cbiAgICAgICAgICAgIGEubGluayB7XG4gICAgICAgICAgICAgICAgdGV4dC1zaGFkb3c6IG5vbmUhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMHB4IWltcG9ydGFudDtcblxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbW9iaWxlLWxhbmRzY2FwZSkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbSFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICBcbiAgICB3aWR0aDogMTAwJSFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAwJSFpbXBvcnRhbnQ7XG4gICAgbWluLWhlaWdodDogMCU7XG4gICAgcmlnaHQ6IDAhaW1wb3J0YW50O1xuICAgIHRyYW5zaXRpb246ICRoZWlnaHQtdHJhbnNpdGlvbjtcbiAgICBkaXNwbGF5OiBibG9jayFpbXBvcnRhbnQ7XG5cbiAgICAvL3RyYW5zaXRpb24gdGhlIGhlaWdodCB0byBvbiBtZW51IG9wZW5cbiAgICAmLmFrX21vYmlsZV9uYXYtLW9wZW4ge1xuICAgICAgICBtaW4taGVpZ2h0OiAxMDAlIWltcG9ydGFudDtcbiAgICAgICAgdHJhbnNpdGlvbjogJGhlaWdodC10cmFuc2l0aW9uO1xuICAgIH1cblxuICAgIC8vdmVydGljYWxseSBjZW50ZXIgdGhlIG5hdlxuICAgIC5zbGlkZXMtY29udGFpbmVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAvL2NlbnRlciBtb2JpbGUgbmF2IG9uIGxhbmRzY2FwZVxuICAgIC5zbGlkZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gICAgXG4gICAgLy9vdmVycmlkZVxuICAgIC5tb2JpbGUge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAvL2FkZCB0aGUgbGluZXMgYWJvdmUgYW5kIGJlbG93IHRoZSBtb2JpbGUgJiB0YWJsZXQgcG9ydHJhaXQgbWVudVxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJG1pbi1kZXNrdG9wKSBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmUoMTAwJSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxN3B4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi9wbmcvYnJhY2tldC10b3AucG5nJykgdG9wIGNlbnRlciAvIGNvbnRhaW4gbm8tcmVwZWF0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lKC0xN3B4KTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE3cHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuL3BuZy9icmFja2V0LWJvdHRvbS5wbmcnKSB0b3AgY2VudGVyIC8gY29udGFpbiBuby1yZXBlYXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vc2V0IGxpbmUgZm9yIGN1cnJlbnQgaXRlbVxuLmFrLW5hdl9fd3JhcHBlciAuY3VycmVudF9wYWdlX2l0ZW0ge1xuICAgIC8vYWRkIHRoZSBsaW5lIGJlbG93XG4gICAgYTo6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmUoKTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIH1cbn1cblxuLy9hbGlnbiBpdGVtcyBsb2dvICYgbWVudSBidXR0b24gb24gbW9iaWwgJiB0YWJsZXRcbi5tb2JpbGUtbmF2aWdhdGlvbiAuZnVsbC1jb250YWluZXIge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWluLWRlc2t0b3ApIHtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICB9XG59XG5cbi8vbWVudSBpY29uIHNpemluZ1xuLm1vYmlsZW5hdi1tYWluLWxpbmsgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDQwcHg7XG4gICAgbWF4LWhlaWdodDogMjVweDtcbn1cblxuLy9oaWRlIHRoZSBkZWZhdWx0IG1lbnUgaWNvblxuLm1vYmlsZS1uYXYtaWNvbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuXG4vL292ZXJyaWRlIHBhZGRpbmcgb24gbG9nbyBcbkBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgICBib2R5LnJlc3BvbnNpdmUgI21hc3RoZWFkLm1hc3RoZWFkLWxvZ28taW4tbWVudSAubG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4uY3VzdG9tLWxvZ28tbGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIC8vb3ZlcnJpZGUgcGFkZGluZyBvbiBsb2dvIFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDgwcHgpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgIG1heC13aWR0aDogMjAlO1xuXG4gICAgICAgIC5jdXN0b20tbG9nbyB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCUhaW1wb3J0YW50O1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJAbWl4aW4gY291bnRlci1yZXNldCgkY291bnRlcikge1xuICAgIGNvdW50ZXItcmVzZXQ6ICRjb3VudGVyO1xufVxuXG5AbWl4aW4gY291bnRlcigkY291bnRlcikge1xuICAgIGNvbnRlbnQ6IGNvdW50ZXIoJGNvdW50ZXIsIGRlY2ltYWwtbGVhZGluZy16ZXJvKScuJztcbiAgICBjb3VudGVyLWluY3JlbWVudDogJGNvdW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbn1cbiIsIkBtaXhpbiB1bmRlcmxpbmUoJHBvc2l0aW9uOiAwKSB7XG4gICAgYm90dG9tOiAkcG9zaXRpb247XG4gICAgY29udGVudDogJyc7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG59IiwiLmVudHJ5LWNvbnRlbnQge1xuICAgIGJsb2NrcXVvdGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGJvcmRlci1sZWZ0OiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBmb250LXNpemU6IDNlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgICAgICBmb250LXN0eWxlOiBpbml0aWFsO1xuICAgICAgICBmb250LWZhbWlseTogXCJDcmltc29uIFRleHRcIjtcblxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkbWluLWRlc2t0b3ApIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIuZW50cnktdGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbn0iLCIuZml2ZS1wb2ludC1wcm9taXNlIHtcblx0aW1nIHtcblx0XHRtYXJnaW46IGF1dG87XG5cdCAgICBkaXNwbGF5OiBibG9jaztcblxuXHRcdEBtZWRpYSAobWluLXdpZHRoOiAkbWluLXRhYmxldCkge1xuXHRcdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdH1cblx0fVxufVxuXG4uZml2ZS1wb2ludC1wcm9taXNlLS1maXJzdCB7XG5cdEBtZWRpYSAobWF4LXdpZHRoOiAkbWluLXRhYmxldCkge1xuXHRcdC5wYW5lbC1ncmlkLWNlbGw6Zmlyc3QtY2hpbGQge1xuXHRcdFx0LnRleHR3aWRnZXQge1xuXHRcdFx0XHRwYWRkaW5nLXRvcDogMmVtO1xuXHRcdFx0XHRib3JkZXItdG9wOiAycHggZG90dGVkICRjb3B5LWNvbG9yO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiAkbWluLXRhYmxldCkge1xuXHRcdC8vZ2l2ZSB0aGUgb3dsIGVxdWFsIHBhZGRpbmdcblx0XHQucGFuZWwtZ3JpZC1jZWxsOmZpcnN0LWNoaWxkIHtcblx0XHRcdHBhZGRpbmctdG9wOiAyZW07XG5cdFx0fVxuXHRcdC8vYWRkIGRvdHRlZCBib3JkZXIgb24gdGhlIHRleHRcblx0XHQucGFuZWwtZ3JpZC1jZWxsOmxhc3QtY2hpbGQge1xuXHRcdFx0LnRleHR3aWRnZXQge1xuXHRcdFx0XHRib3JkZXItdG9wOiAycHggZG90dGVkICRjb3B5LWNvbG9yO1xuXHRcdFx0XHRwYWRkaW5nLXRvcDogMmVtO1x0XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59IiwiLy8gY29tbWVudCBvdXQgYmVjYXVzZSBvZiBwYW5lbC1yb3ctc3R5bGVzIGFkZGluZyBuZWdhdGl2ZSBtYXJnaW5zIHdoZW4gXG4vKiAucGFuZWwtcm93LXN0eWxlIHtcbiAgICBwYWRkaW5nOiAwO1xufSAqLyIsIi5wYWdlLWRpdmlkZXItdmVydGljYWwge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDFweDtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IC0yMHB4O1xuICAgICAgICBib3JkZXItbGVmdDogMnB4IGRhc2hlZDtcbiAgICB9XG59IiwiLmFrLXBsZWRnZXMge1xuXHRib3JkZXItdG9wOiAycHggZG90dGVkIGxpZ2h0Z3JheTtcbiAgICBwYWRkaW5nOiAxZW0gMDtcbn0iLCIuYWstc3RhbmRvdXQge1xuXHRib3JkZXItdG9wOiAycHggZG90dGVkO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBkb3R0ZWQ7XG4gICAgcGFkZGluZy10b3A6IDFlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufSIsIi5zY3JvbGwtdG8tc2VjdGlvbiB7XG4gICAgYnIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICZfX2J1dHRvbiB7IFxuICAgICAgICBmb250LWZhbWlseTogXCJDcmltc29uIFRleHRcIjtcbiAgICB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuL3N2Zy9zY3JvbGwtZG93bi5zdmcnKSB0b3AgY2VudGVyIG5vLXJlcGVhdDtcbiAgICB9XG5cbiAgICAmX19icmFja2V0IHtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxufSIsIiNzY3JvbGwtdG8tdG9wIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHdpZHRoOiA3ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xuICAgIFxuICAgIC8vb3ZlcnJpZGVzXG4gICAgJi5kaXNwbGF5ZWQge1xuICAgICAgICBvcGFjaXR5OiAxIWltcG9ydGFudDtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnZhbnRhZ2UtaWNvbi1hcnJvdy11cCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLnNjcm9sbC10by10b3BfX2ljb24ge1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi9zdmcvc2Nyb2xsLXRvcC5zdmcpIHRvcCBjZW50ZXIgbm8tcmVwZWF0O1xuICAgIH1cbn1cblxuIiwiLnR3by1jb2wtd2l0aC1pbWFnZSB7XG5cdGltZyB7XG5cdFx0bWFyZ2luOiBhdXRvO1xuXHQgICAgZGlzcGxheTogYmxvY2s7XG5cblx0XHRAbWVkaWEgKG1pbi13aWR0aDogJG1pbi10YWJsZXQpIHtcblx0XHRcdGZsb2F0OiByaWdodDtcblx0XHR9XG5cdH1cbn0iLCIvL1RIRVNFIFNIT1VMRCBCRSBBRERFRCBUTyBDTVNcblxuLmFrLW5hdl9fd3JhcHBlciBsaSBhOjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogI2ZmYzcyYTsgXG59XG5cbiNzY3JvbGwtdG8tdG9wIHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbiNzY3JvbGwtdG8tdG9wOmhvdmVyIHtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5zY3JvbGwtdG8tdG9wX19jb3B5IHtcbiAgY29sb3I6ICNmZmM3MmE7XG59XG5cbi8qIC5lbnRyeS10aXRsZTo6YmVmb3JlIHtcbiAgY29udGVudDogJ+KAlCAnO1xufSAqL1xuXG4ucGFnZS1udW1iZXIge1xuICAgIGZvbnQtc2l6ZTogNzZweDtcbiAgICBtYXJnaW4tdG9wOiAzNnB4OyAvLyBzYW1lIGFzIGNvbnRlbnQgaDFcbiAgICBmb250LWZhbWlseTogXCJDcmltc29uIFRleHRcIjtcbiAgICBjb2xvcjogI2ZmYzcyYTtcbn0iXX0= */
